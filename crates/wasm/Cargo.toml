[package]
name = "cairo-wasm"
version.workspace = true
edition.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde_json = "1.0.87"
wasm-bindgen = "0.2.63"
anyhow.workspace = true
clap.workspace = true
compiler = { path = "../compiler" }
casm = { path = "../casm" }
sierra = { path = "../sierra" }
sierra_gas = { path = "../sierra_gas" }
sierra_generator = { path = "../sierra_generator" }
sierra_to_casm = { path = "../sierra_to_casm" }
itertools.workspace = true
salsa.workspace = true
thiserror.workspace = true

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.cairo-rs]
default-features = false
git = "https://github.com/lambdaclass/cairo-rs.git"
rev = "4f36aaf46dea8cac158d0da5e80537388e048c01"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
